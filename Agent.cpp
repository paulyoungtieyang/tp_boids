//****************************************************************************
//
//
//
//****************************************************************************


 
 
// ===========================================================================
//                                   Libraries
// ===========================================================================



// ===========================================================================
//                                 Project Files
// ===========================================================================
#include "Agent.h"




//############################################################################
//                                                                           #
//                           Class Template_class                            #
//                                                                           #
//############################################################################

// ===========================================================================
//                         Definition of static attributes
// ===========================================================================

// ===========================================================================
//                                  Constructors
// ===========================================================================
Agent::Agent(void)
{
	y1=0;
	y2=0;
	y3=0;

    PERCEPTION = 0;
    CONTACT = 0;

	pos= new Vect();
	speed= new Vect();

	next_pos= new Vect();
	next_speed= new Vect();
}

// ===========================================================================
//                                  Destructor
// ===========================================================================
Agent::~Agent(void)
{
}

// ===========================================================================
//                                 Public Methods
// ===========================================================================
void Agent:: next_pos_calc(double dt){
	next_pos->x= pos->x + dt*speed->x;
	next_pos->y= pos->y + dt*speed->y;
	next_pos->Set_Norm();
}

// ===========================================================================
//                                Protected Methods
// ===========================================================================

// ===========================================================================
//                               Non inline accessors
// ===========================================================================
