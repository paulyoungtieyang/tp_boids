//****************************************************************************
//
//
//
//****************************************************************************



#ifndef __PREDATOR_H__
#define __PREDATOR_H__


// ===========================================================================
//                                  Libraries
// ===========================================================================
#include <cstdio>
#include <cstdlib>



// ===========================================================================
//                                Project Files
// ===========================================================================
#include "Vect.h"



// ===========================================================================
//                              Class declarations
// ===========================================================================






class Predator 
{
  public :
    
    // =======================================================================
    //                                 Enums
    // =======================================================================
    
    // =======================================================================
    //                               Constructors
    // =======================================================================
    Predator(void);
    Predator(int perception);
    Predator(const Predator &model);
    // =======================================================================
    //                                Destructor
    // =======================================================================
    virtual ~Predator(void);

    // =======================================================================
    //                            Accessors: getters
    // =======================================================================
    inline Vect Get_Pos(void);
    inline Vect Get_Speed(void);


    // =======================================================================
    //                            Accessors: setters
    // =======================================================================
    inline void Set_Pos(Vect pos_to_give);

    inline void Set_Pos_Random(double u);
    inline void Set_Speed(Vect speed_to_give);
    // =======================================================================
    //                                Operators
    // =======================================================================

    // =======================================================================
    //                              Public Methods
    // =======================================================================
    inline void  Print_Vect_Predator(void) ;
    // =======================================================================
    //                             Public Attributes
    // =======================================================================





  protected :

    // =======================================================================
    //                            Forbidden Constructors
    // =======================================================================
    /*Predator(void)
    {
      printf("%s:%d: error: call to forbidden constructor.\n", __FILE__, __LINE__);
      exit(EXIT_FAILURE);
    };*/
    


    // =======================================================================
    //                              Protected Methods
    // =======================================================================

    // =======================================================================
    //                             Protected Attributes
    // =======================================================================
      Vect pos;
      Vect speed;
};


// ===========================================================================
//                              Getters' definitions
// ===========================================================================

// ===========================================================================
//                              Setters' definitions
// ===========================================================================
inline void Predator::Set_Pos_Random(double u)
{
  if(u<0.25)
  {
    Vect p(1,0);
    pos=pos+p;
  }
  else if(u<0.5 && u>0.25) 
  {
    Vect p(0,1);
    pos=pos+p;
  }
  else if(u>0.5 && u<0.75)
  {
    Vect p(-1,0);
    pos=pos+p;
  }
  else
  {
    Vect p(0,-1);
    pos=pos+p;
  }
}

inline void Predator::Set_Pos(Vect pos_to_give)
{
  pos=pos_to_give;
}


inline void Predator::Set_Speed(Vect speed_to_give)
{
  speed= speed_to_give;
}

inline Vect Predator::Get_Pos(void)
{
    return pos;
}

inline Vect Predator::Get_Speed(void)
{
    return speed;
}

// ===========================================================================
//                             Operators' definitions
// ===========================================================================

// ===========================================================================
//                          Inline functions' definition
// ===========================================================================
inline void Predator::Print_Vect_Predator(void) 
{
    
    printf("\n");

}

#endif // __PREDATOR_H__

