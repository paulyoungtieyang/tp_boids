//****************************************************************************
//
//
//
//****************************************************************************


 
 
// ===========================================================================
//                                   Libraries
// ===========================================================================



// ===========================================================================
//                                 Project Files
// ===========================================================================
#include "Obstacle.h"




//############################################################################
//                                                                           #
//                           Class Obstacle                            #
//                                                                           #
//############################################################################

// ===========================================================================
//                         Definition of static attributes
// ===========================================================================

// ===========================================================================
//                                  Constructors
// ===========================================================================
Obstacle::Obstacle(void)
{
	double u = 600*((double)rand()/ (double)RAND_MAX);
	double v = 440*((double)rand()/ (double)RAND_MAX);
    Vect p(u,v);

	pos = p;
	
}

Obstacle::Obstacle(const Obstacle &model)
    {
     pos=model.pos;
    }

// ===========================================================================
//                                  Destructor
// ===========================================================================
Obstacle::~Obstacle(void)
{
}

// ===========================================================================
//                                 Public Methods
// ===========================================================================

// ===========================================================================
//                                Protected Methods
// ===========================================================================

// ===========================================================================
//                               Non inline accessors
// ===========================================================================
