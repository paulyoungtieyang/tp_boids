//****************************************************************************
//
//
//
//****************************************************************************



#ifndef __VECT_H__
#define __VECT_H__


// ===========================================================================
//                                  Libraries
// ===========================================================================
#include <cstdio>
#include <cstdlib>
#include <math.h>


// ===========================================================================
//                                Project Files
// ===========================================================================




// ===========================================================================
//                              Class declarations
// ===========================================================================






class Vect
{
  public :
    
    // =======================================================================
    //                                 Enums
    // =======================================================================
    
    // =======================================================================
    //                               Constructors
    // =======================================================================
    Vect(void);

    // =======================================================================
    //                                Destructor
    // =======================================================================
    virtual ~Vect(void);

    // =======================================================================
    //                            Accessors: getters
    // =======================================================================
    inline unsigned int Get_X (void) const;
    inline unsigned int Get_Y (void) const;
    inline long Get_Norm (void) const;
    // =======================================================================
    //                            Accessors: setters
    // =======================================================================
    inline long Set_Norm (void);
    // =======================================================================
    //                                Operators
    // =======================================================================
    unsigned int x;
    unsigned int y;
    long norm;
    
    // =======================================================================
    //                              Public Methods
    // =======================================================================

    // =======================================================================
    //                             Public Attributes
    // =======================================================================





  protected :

    // =======================================================================
    //                            Forbidden Constructors
    // =======================================================================
    /*Vect(void)
    {
      printf("%s:%d: error: call to forbidden constructor.\n", __FILE__, __LINE__);
      exit(EXIT_FAILURE);
    };*/
    Vect(const Vect &model)
    {
      printf("%s:%d: error: call to forbidden constructor.\n", __FILE__, __LINE__);
      exit(EXIT_FAILURE);
    };


    // =======================================================================
    //                              Protected Methods
    // =======================================================================

    // =======================================================================
    //                             Protected Attributes
    // =======================================================================
};


// ===========================================================================
//                              Getters' definitions
// ===========================================================================
inline unsigned int Vect:: Get_X (void) const
{
    return x;
} 

inline unsigned int Vect:: Get_Y (void) const
{
    return y;
}

inline long Vect:: Get_Norm (void) const
{
    return norm;
}
// ===========================================================================
//                              Setters' definitions
// ===========================================================================
inline long Vect:: Set_Norm (void)
{
    return sqrt( (x*x) + (y*y));
}
// ===========================================================================
//                             Operators' definitions
// ===========================================================================

// ===========================================================================
//                          Inline functions' definition
// ===========================================================================


#endif // __VECT_H__

