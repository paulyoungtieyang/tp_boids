//****************************************************************************
//
//
//
//****************************************************************************


 
 
// ===========================================================================
//                                   Libraries
// ===========================================================================



// ===========================================================================
//                                 Project Files
// ===========================================================================
#include "Prey.h"




//############################################################################
//                                                                           #
//                           Class Prey                            #
//                                                                           #
//############################################################################

// ===========================================================================
//                         Definition of static attributes
// ===========================================================================

// ===========================================================================
//                                  Constructors
// ===========================================================================
Prey::Prey(void):Agent()
{
	
	double u = W*((double)rand()/ (double)RAND_MAX);
	double v = H*((double)rand()/ (double)RAND_MAX);
    Vect p(u,v);

    pos = p;
	//printf(" Test : Valeurs de X:%ld Y:%lf \n ",test.Get_X(),test.Get_Y());
	speed = Vect (0,0);


}

Prey::Prey(double perception, double contact): Agent(perception, contact)
{
	double u = W*((double)rand()/ (double)RAND_MAX);
	double v = H*((double)rand()/ (double)RAND_MAX);
    Vect p(u,v);

	pos = p;
	speed = Vect (0,0);

}

// ===========================================================================
//                                  Destructor
// ===========================================================================
/*Prey::Prey(const Prey &model, int index_to_give)
{
	y1=model.y1;
	y2=model.y2;
	y3=model.y3;

    index=index_to_give;
    PERCEPTION=model.PERCEPTION;
    CONTACT=model.CONTACT;

   	pos= Vect(model.pos);

    speed= Vect(model.speed);

}*/

Prey::Prey(const Prey &model)
{
	PERCEPTION=model.PERCEPTION;
    CONTACT=model.CONTACT;

	pos= Vect(model.pos);

    speed= Vect(model.speed);
}


Prey::~Prey(void)
{

}


// ===========================================================================
//                                 Public Methods
// ===========================================================================

// ===========================================================================
//                                Protected Methods
// ===========================================================================

// ===========================================================================
//                               Non inline accessors
// ===========================================================================
